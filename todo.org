* Inbox
** [ ] Game development Sandbox
DEADLINE: <2021-03-31 Wed> SCHEDULED: <2021-03-17 Wed>

Very simple toolbox for playing around with turn-based, Euro-style Games.
** [ ] Get Sandbox running with Windows
SCHEDULED: <2021-03-18 Thu>

Dual-boot with Windows to reproduce exact steps, most likely.
** [ ] Editor Features
The editor dynamically joins scene objects with text objects.

Features:
- As user pans the camera, text values update automatically.
- Project hidden values into editor.

*** [ ] insert-chars :fn:
Takes a start position text, updates tokens or creating new ones as needed.
*** [ ] delete-chars :fn:
Takes a start position and a length, updates tokens.
*** [ ] cursor-form :fn:
Returns the form at ~point~.
*** [ ] form-cursor :fn:
Returns a cursor over forms in constant time. ~(iterate next-form cursor)~
yields a depth-first search over forms.
*** [ ] entity-cursor :fn:
Return a cursor over entities associated with forms in the editor.
** [ ] Starting The Game
Starting the game is all about developing a minimum viable physics. Initially
ther is just lift-and-drop physics

*** [ ] Drag-and-drop pieces on a board.
*** [ ] Turn-based card game
*** [ ] Turn-based
** [ ] Peer-to-Peer
Eurozone games are mostly Peer-to-Peer, with a small hosted service for discover (unless tuntox).

*** [ ] Find an existing demonstration of the RAFT protocol.
*** [ ] Implement it in Clojure(Script).
*** [ ] Make updates opportunistic.
*** [ ] Implement webrtclj or extend sente.
