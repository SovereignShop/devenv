[[./resources/images/environment.png]]


I think it will be highly beneficial to use a shared container for development.
This will:

- Make development much smoother because we have a shared environment.
- Emacs generally runs much better on Linux.
- Great way to dip your toes into the Linux world.
- Simplifies deployment because many hosting services support docker
  containers directly.

  Currently the container is setup for python, Clojure(Script), and Java projects.

* Installing
- install git

- `git clone git@github.com:cartesian-theatrics/games.git --recursive`. This will probably
  fail. You'll need to generate an ssh key [[https://github.com/settings/keys][here]] (notice the link to "generating SSH keys").
  Generally it's worth going through the trouble to setup ssh keys, otherwise you'll constantly
  be authenticating manually and some things won't work as smoothly. You'll want to make sure you
  install `openssh` in Cygwin and use something like `ssh-keygen -t ed25519 -C "<email>"`.
** Windows
I won't be able to say exactly how to install on Window since I don't have it,
but following these guides should get you there:

1. [[https://docs.docker.com/docker-for-windows/install/][Install Docker]]
2. If you want, install Doom Emacs following this [[https://earvingad.github.io/posts/doom_emacs_windows/][guide]]. Note, this repo includes Doom Emacs
   which should work with the docker container for development.
3. Try running emacs in a Linux docker container following [[https://github.com/JAremko/docker-emacs#windows][this guide]]. You'll want
   to make sure you also bind-mount your `.emacs.d` (see "modules/emacs.d" and
   "modules/doom.d") into the container for doom to work properly. See my
   docker_run.sh script. You're docker command could look something like:
   #+begin_src shell
   docker run --name emacs --rm -it\
    -e DISPLAY="$DISPLAY"\
    -e UNAME="emacser"\
    -e GNAME="emacsers"\
    -e UID="1000"\
    -e GID="1000"\
    -v $(pwd)/modules/emacs.d:/home/emacs/.emacs.d\ # $(pwd)
    -v $(pwd)/modules/doom.d:/home/emacs/.doom.d\
    jare/emacs emacs
   #+end_src
   Note that Doom Emacs still won't launch correctly because it hasn't been fully
   installed.
4. Make sure you have the necessary environment variables:
   #+begin_src shell
   echo ${USER} ${HOME} ${UID}
   #+end_src
5. Create copy of docker_run.sh and see if you can get it to work with Cygwin.
** Linux
Once you have docker installed, Simply run:
1. ./docker_build.sh (in this directory)
2. ./docker_run.sh (in this directory)
* Development
** Colaborative editing
We'll use crdt.el for collaborative editing. It's designed for
org-mode and allows you to share any emacs buffer for collaborative
editing. See the README [[https://code.librehq.com/qhong/crdt.el][here]]. The docker container is already
setup with `tuntox`, so follow the guide for that to share your buffers.

I'll make sure that CRDT is supported out-of-the-box as I setup the emacs
environment here. I've tested it already with two computers and it works
wonderfully.
** Communication
I installed telegram into the container with voice support so we should be able to
chat to each other directly in emacs. You'll want to install telegram for your
desktop: https://desktop.telegram.org/

Just run `M-x telega` (say yes to the compile questions) to connect the emacs
client to your telegram desktop.
*** Kinda Pointless honestly
Source: [2021-03-18 Thu], https://www.reddit.com/r/news/comments/m7qjvm/home_surveillance_camera_shows_officer_lied_on/
 #+BEGIN_QUOTE
Home surveillance camera shows officer lied on report when charging man with major crimes
#+END_QUOTE
** Essential Commands

| Category        | Hint                 | key pattern  | command                  | Note                                  |
|-----------------+----------------------+--------------+--------------------------+---------------------------------------|
| Emacs           | Emacs is stuck       | ~Ctrl-g~     |                          |                                       |
| Navigation      | Enter Normal         | ~ESC~        | evil-normal-state        | it's recommended to remap CAPS to ESC |
| Navigation      | Enter Insert         | ~i~          | evil-insert              |                                       |
| Navigation      | Enter Visual         | ~v~          | evil-visual-state        | Used for selecting text               |
| Doom            | Get Help             | ~SPC h d h~  | doom/help                | Learn Doom                            |
| Buffers         | Goto Buffer          | ~SPC b b~    | switch-workspace-buffer  |                                       |
| Buffers         | Goto Any Buffer      | ~SPC b B~    | switch-buffer            | Inclues Process Buffers               |
| Buffers         | Manage Buffers       | ~SPC b i~    | ibuffer                  | Press ~d~ to mark, ~d~ to delete      |
| Terminal        | Open term            | ~M-x vterm~  | vterm                    | Open [[https://ohmyz.sh/][oh-my-zsh]] shell                  |
| Search          | Recent files         | ~SPC f r~    | recentf-open-files       | Find recent files.                    |
| Search          | Project files        | ~SPC p f~    | projectile-find-file     | Find file in project (git repo)       |
| Search          | Omni Search          | ~SPC *~      |                          | Omni search files in project          |
| Search          | Command Search       | ~SPC :~      | execute-extended-command | Search for a emacs command            |
| Chat            | Open Telegram client | ~M-x telega~ |                          | Open [[https://zevlg.github.io/telega.el/][telegram chat client]]             |
| Version Control | Manage Git           | ~SPC g g~    | magit-status             | The ultimate git interface            |
|                 |                      |              |                          |                                       |


- Emacs is stuck:      ~Ctrl-g~
- Navigation:
  + Modes
    - Enter Normal: ~ESC~ (it's highly recommended to remap CAPS to ESC)
    - Enter Edit:   ~i~
    - Enter Visual: ~v~  (for )
- Doom
  + Learn Doom: ~SPC h d h~
- Buffers
  + Goto Buffer:     ~SPC b b~
  + Goto Any Buffer: ~SPC b b~ (includes process buffers)
  + Manager buffers: ~SPC b i~ (Press ~d~ to mark for delete, ~x~ to delete all marked)
- Terminal:
  + Open Terminal:     ~M-x vterm~ or ~SPC :~ ~vterm~.
  + Open file in term: ~ec <path/filename>~
- Search
  + Recent files:        ~SPC f r~
  + Project file:        ~SPC f p~
  + Project Omni:        ~SPC *~
  + Directory relative:  ~SPC d~
  + Command search:      ~SPC :~ or ~M x~
- Git (Magit)
  + Git status: ~SPC g g~
  + Get help:   ~h~
- Clojure:
  + Open CLJ REPL: ~SPC m '~
  + Eval Buffer: ~SPC m e v~
  + Eval Expression: ~SPC m e e~
  + Eval And replace: ~SPC m e k~
- Chat:
  Open telega (Telegram client): ~M-x telega~
