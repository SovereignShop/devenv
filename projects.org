#+TITLE: Projects

#+BEGIN: clocktable :scope file :maxlevel 3 :link t
#+CAPTION: Clock summary at [2021-03-31 Wed 00:01]
| Headline                                |   Time |      |
|-----------------------------------------+--------+------|
| *Total time*                            | *6:57* |      |
|-----------------------------------------+--------+------|
| [[file:/home/john/Workspace/projects.org::*\[\[elisp:(org-projectile-open-project "skyhook")\]\[skyhook\]\]][skyhook]]                                 |   4:41 |      |
| \_  [[file:/home/john/Workspace/projects.org::*Implement initial version of ~insert-chars~][Implement initial version of...]]     |        | 1:32 |
| \_  [[file:/home/john/Workspace/projects.org::*Exhaustive Tests of ~insert-chars~][Exhaustive Tests of ~insert-chars~]]  |        | 0:01 |
| \_  [[file:/home/john/Workspace/projects.org::*Implement ~delete-chars~][Implement ~delete-chars~]]            |        | 0:21 |
| \_  [[file:/home/john/Workspace/projects.org::*Test insert-text/delete-text and browser and identify new bugs/tasks][Test insert-text/delete-text and...]] |        | 1:03 |
| \_  [[file:/home/john/Workspace/projects.org::*Editor cljc support][Editor cljc support]]                 |        | 1:44 |
| [[file:/home/john/Workspace/projects.org::*\[\[elisp:(org-projectile-open-project "swig")\]\[swig\]\]][swig]]                                    |   0:02 |      |
| \_  [[file:/home/john/Workspace/projects.org::*Implement frames][Implement frames]]                    |        | 0:02 |
| [[file:/home/john/Workspace/projects.org::*\[\[elisp:(org-projectile-open-project "Workspace")\]\[Workspace\]\]][Workspace]]                               |   2:14 |      |
| \_  [[file:/home/john/Workspace/projects.org::*Try xdg-open-server][Try xdg-open-server]]                 |        | 0:29 |
| \_  [[file:/home/john/Workspace/projects.org::*Fix launch install][Fix launch install]]                  |        | 0:04 |
| \_  [[file:/home/john/Workspace/projects.org::*Fix time in container][Fix time in container]]               |        | 0:09 |
| \_  [[file:/home/john/Workspace/projects.org::*Try out NixOS on WSL 2.][Try out NixOS on WSL 2.]]             |        | 0:07 |
| \_  [[file:/home/john/Workspace/projects.org::*Write windows install instructions][Write windows install instructions]]  |        | 1:25 |
#+END:


* [[elisp:(org-projectile-open-project "skyhook")][skyhook]] [4/8]
:PROPERTIES:
:CATEGORY: skyhook
:END:
** DONE Implement initial version of ~insert-chars~
SCHEDULED: <2021-03-26 Fri>
:LOGBOOK:
CLOCK: [2021-03-25 Thu 19:13]--[2021-03-25 Thu 20:45] =>  1:32
:END:
Some tests work, cursor position is probably not properly maintained.
** TODO Exhaustive Tests of ~insert-chars~ :editor:
SCHEDULED: <2021-03-30 Tue>
:LOGBOOK:
CLOCK: [2021-03-30 Tue 14:17]--[2021-03-30 Tue 14:18] =>  0:01
:END:
Write more exhaustive tests of ~insert-chars~. The function
will probably need to be re-written.
** DONE Implement ~delete-chars~
SCHEDULED: <2021-03-28 Sun>
:LOGBOOK:
CLOCK: [2021-03-29 Mon 17:30]--[2021-03-29 Mon 17:51] =>  0:21
CLOCK: [2021-03-28 Sun 21:57]--[2021-03-28 Sun 21:57] =>  0:00
:END:
The three existing tests for this are now working, although I'm sure there are
other bugs. Fortunately the code looks like cleaner although it is still a big
doozy. It's workable enough to allow us to move forward.
** DONE Test insert-text/delete-text and browser and identify new bugs/tasks
SCHEDULED: <2021-03-29 Mon>
:LOGBOOK:
CLOCK: [2021-03-30 Tue 14:18]--[2021-03-30 Tue 14:55] =>  0:37
CLOCK: [2021-03-29 Mon 18:02]--[2021-03-29 Mon 18:28] =>  0:26
:END:
Basic browser functionality restored
** TODO Move editor into separate repository :editor:
SCHEDULED: <2021-03-30 Tue>
** DONE Editor cljc support
SCHEDULED: <2021-03-30 Tue>
:LOGBOOK:
CLOCK: [2021-03-30 Tue 12:32]--[2021-03-30 Tue 14:16] =>  1:44
:END:
Tests are passing in Clojurescript now
** TODO Implement delete-text :editor:
** TODO Add emacs as backend for editor :editor:
SCHEDULED: <2021-04-03 Sat>
Supporting emacs might be easy and will make it easier to develop and test.
* [[elisp:(org-projectile-open-project "swig")][swig]] [0/7]
:PROPERTIES:
:CATEGORY: swig
:END:
** TODO Implement frames
SCHEDULED: <2021-03-27 Sat>
:LOGBOOK:
CLOCK: [2021-03-25 Thu 15:59]--[2021-03-25 Thu 16:01] =>  0:02
:END:
Frames correspond to full chrome frames (headless).
** TODO Implement Windows
SCHEDULED: <2021-03-28 Sun>
*** Windows are movable within the current frame.
** TODO Data Model Spec
SCHEDULED: <2021-03-29 Mon>
Capture current semantics in a Spec using Spec or Malli.
** TODO Rename
SCHEDULED: <2021-03-31 Wed>
Swig is already a popular library. I need to come up with
a new name.
** TODO Finish Three.js Support.
SCHEDULED: <2021-04-04 Sun>
** TODO Docs
SCHEDULED: <2021-04-06 Tue>
** TODO Examples
SCHEDULED: <2021-04-09 Fri>
* [[elisp:(org-projectile-open-project "Workspace")][Workspace]] [6/6]
:PROPERTIES:
:CATEGORY: Workspace
:END:
** DONE use org-projectile
Manage tasks on a per-project basis.
** DONE Try xdg-open-server :environment:
SCHEDULED: <2021-03-23 Tue>
:LOGBOOK:
CLOCK: [2021-03-23 Tue 13:00]--[2021-03-23 Tue 13:29] =>  0:00
:END:
Try to use [[https://github.com/kitsunyan/xdg-open-server][xdg-open-server]] to open links in host.

Conclusion: not immediately feasible. WSL2 is a strange beast.
** DONE Fix launch install :environment:
SCHEDULED: <2021-03-23 Tue>
:LOGBOOK:
CLOCK: [2021-03-23 Tue 11:09]--[2021-03-23 Tue 11:13] =>  0:02
:END:
** DONE Fix time in container :environment:
SCHEDULED: <2021-03-23 Tue>
:LOGBOOK:
CLOCK: [2021-03-23 Tue 11:00]--[2021-03-23 Tue 11:09] => -7:08
:END:
** DONE Try out NixOS on WSL 2. :environment:
SCHEDULED: <2021-03-23 Tue>
:LOGBOOK:
CLOCK: [2021-03-23 Tue 11:13]--[2021-03-23 Tue 11:20] =>  0:01
:END:
Found out WSL2 also does not support systemd natively. This is also not worth worrying about.
The above fix for time in container is satisfactory for now.
** DONE Write windows install instructions :environment:
SCHEDULED: <2021-03-23 Tue>
:LOGBOOK:
CLOCK: [2021-03-23 Tue 11:21]--[2021-03-23 Tue 12:46] =>  1:25
:END:

DONE Get Sandbox running with Windows
* [[elisp:(org-projectile-open-project "webrt-cljc")][webrt-cljc]] [0/1]
:PROPERTIES:
:CATEGORY: webrt-cljc
:END:
** TODO Implement/study Minimal javascript example
* [[elisp:(org-projectile-open-project "blog")][blog]] [0/2]
:PROPERTIES:
:CATEGORY: blog
:END:
** TODO Blog post/stream on Sayid
Don't forget about Sayid! Can we maybe do a version of Sayid that is independent of emacs and integrates with clj-doc?
** TODO Docker-Compose
SCHEDULED: <2021-03-27 Sat>
Need to make a docker-compose file with entry for the blog container. The containers
should also be networked together.
* [[elisp:(org-projectile-open-project "practice")][practice]] [0/2]
:PROPERTIES:
:CATEGORY: practice
:END:
** TODO Practice RETE algorithm
SCHEDULED: <2021-03-27 Sat +2d>
** TODO Practice RAFT protocol
SCHEDULED: <2021-03-27 Sat +2d>
* [[elisp:(org-projectile-open-project "dlfp")][dlfp]] [0/0]
:PROPERTIES:
:CATEGORY: dlfp
:END:
** TODO Get Deep Diamond working in Docker environemnt
So far I have not been successfull get Nvidia drivers to work in the windows
environment, as the nvidia plugion/backend for docker is not available in for
Windows Docker. It seems to be possible but so far hasn't worked out.
* [[elisp:(org-projectile-open-project "codenames")][codenames]] [0/1]
:PROPERTIES:
:CATEGORY: codenames
:END:
** TODO Get it working again...
* [[elisp:(org-projectile-open-project "clj-rosbag")][clj-rosbag]] [0/1]
:PROPERTIES:
:CATEGORY: clj-rosbag
:END:
** TODO Look into implementation based on Binf
Repo is [[https://github.com/helins/binf.cljc][here]].
